# 문제 정의
# 0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.
# 1. 이친수는 0으로 시작하지 않는다.
# 2. 이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
# N(1 ≤ N ≤ 90)이 주어졌을 때, N자리 이친수의 개수를 구하기

# 의사 코드
# n입력 받기
# dp 배열 생성
# dp[1]=1로 초기화
# n이 1일때는 접근 할 수 없게 만약 n이 1이상이면:
#     dp[2]=1로 초기화
# 3부터 n+1까지 반복하며:
#     dp[i]=dp[i-1]+dp[i-2] 점화식
# dp[n] 출력

n=int(input())
dp=[0]*(n+1)
dp[1]=1
if n>1:
    dp[2]=1
for i in range(3,n+1):
    dp[i]=dp[i-1]+dp[i-2]

print(dp[n])